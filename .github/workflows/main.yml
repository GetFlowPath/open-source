name: "Main"
on:
  push:
    branches:
      - "main"
env:
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: "List - Test - Lint - Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=50 origin +refs/heads/main:refs/remotes/origin/main
      - name: "Set SHOULD_RUN flag"
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "SHOULD_RUN=false" >> $GITHUB_ENV
          else
            echo "SHOULD_RUN=true" >> $GITHUB_ENV
          fi

      - name: "Set NX SHAs"
        uses: nrwl/nx-set-shas@v3
        run: npm ci

      - name: "Set up Node"
        uses: actions/setup-node@v3
        with:
          node-version: 16
        if: env.SHOULD_RUN == 'true'

      - name: "Restore workspace cache"
        uses: actions/cache@v3
        id: workspace-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-

      - name: "Install Dependencies"
        run: yarn install --frozen-lockfile --non-interactive
        if: env.SHOULD_RUN == 'true'

      - run: npx nx workspace-lint
      - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - run: npx nx affected --target=build --parallel=3

      - name: "Upload coverage results to CodeCov"
        uses: codecov/codecov-action@v3
        if: env.SHOULD_RUN == 'true'
