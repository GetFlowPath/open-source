name: "PR"
on: pull_request
env:
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  #
  # Cancel any workflows that would be duplicated by this run
  #
  cancel_duplicate_runs:
    name: "Cancel Duplicates"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=5 origin +refs/heads/main:refs/remotes/origin/main
      - uses: rokroskar/workflow-run-cleanup-action@master
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  list_test_lint_build:
    name: "List - Test - Lint - Build"
    needs: [cancel_duplicate_runs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=50 origin +refs/heads/main:refs/remotes/origin/main
      - name: "Set SHOULD_RUN flag"
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "SHOULD_RUN=false" >> $GITHUB_ENV
          else
            echo "SHOULD_RUN=true" >> $GITHUB_ENV
          fi

      - name: "Set up Node"
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
        if: env.SHOULD_RUN == 'true'

      - name: "Restore workspace cache"
        uses: actions/cache@v3
        id: workspace-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-

      - name: "Install Dependencies"
        run: yarn install --frozen-lockfile --non-interactive
        if: env.SHOULD_RUN == 'true'

      #
      # List affected
      #
      - name: "List affected"
        run: yarn print-affected --base=origin/main --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Test affected
      #
      - name: "Test affected projects"
        run: yarn nx affected:test --base=origin/main --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Lint affected
      #
      - name: "Lint files"
        run: yarn nx affected:lint --base=origin/main --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Build affected
      #
      - name: "Build affected projects"
        run: yarn nx affected:build --prod --base=origin/main --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Upload coverage reports
      #
      - name: "Upload coverage results to CodeCov"
        run: tools/ci/coverage-upload.sh
        if: env.SHOULD_RUN == 'true'
