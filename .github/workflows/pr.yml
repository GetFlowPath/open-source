name: 'PR'
on: pull_request
env:
  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  NX_BRANCH: ${{ github.event.number }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}
  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

jobs:
  main:
    name: 'Nx Cloud - Main Job'
    runs-on: ubuntu-latest
    steps:
      - uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.8
        with:
          number-of-agents: 3
          parallel-commands: |
            npx nx-cloud record -- npx nx workspace-lint
            npx nx-cloud record -- npx nx format:check
          parallel-commands-on-agents: |
            yarn print-affected &
            npx nx affected --target=lint --parallel=3 &
            npx nx affected --target=test  --configuration=coverage --parallel=3 --ci --code-coverage &
            npx nx affected --target=build --parallel=3
          final-commands: |
            npx nx-cloud record node ./tools/scripts/coverageMerger.js
#      - uses: actions/upload-artifact@v3
#        with:
#          name: coverage-report
#          path: coverage/lcov.info

  upload_coverage:
    name: 'Upload coverage results to CodeCov'
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage

      - uses: codecov/codecov-action@v3

  agents:
    name: 'Nx Cloud - Agents'
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.8
    with:
      number-of-agents: 3
